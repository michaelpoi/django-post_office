name: Test

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  ruff-format:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
        with:
          version: 0.4.8
          args: 'format --check'    

  build:
    runs-on: ubuntu-latest
    name: Python${{ matrix.python-version }}/Django${{ matrix.django-version }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        django-version: ["4.2", "5.0"]
        exclude:
          - python-version: "3.9"
            django-version: "5.0"

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytz
        pip install nh3
        pip install django-ckeditor
        pip install psycopg2-binary
        pip install pytest
        pip install pytest-django
        pip install celery
        pip install lxml
        pip install pytest django
        pip install "Django==${{ matrix.django-version }}.*"

    - name: Set up PostgreSQL DB User with CREATEDB Privilege
      run: |
        psql -U postgres -h localhost -c "CREATE USER post_office WITH PASSWORD 'post_office' CREATEDB;"

    - name: Run Test
      env:
        DJANGO_SETTINGS_MODULE: celery_project.settings
      run: |
        pytest celery_project
